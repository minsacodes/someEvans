load(file = url(link))
# variables in the data:
names(crime)
# some stats:
summary(crime)
# stats of days to report
# notice the spread of values.
summary(crime$DaysToReport)
# 'order' decreasing
library(magrittr) # for %>%
crime[order(-crime$DaysToReport),c('year','DaysToReport')]%>%head(20)
# non missing 'precint'
crime=crime[complete.cases(crime$Precinct),]
# summary by groups
aggregate(data=crime, DaysToReport~Precinct,mean)
# boxplot per precint
library(ggplot2)
base=ggplot(data=crime,
aes(x=Precinct,y=DaysToReport))
base + geom_boxplot()
# fast summary by groups with 'tapply'
tapply(crime$DaysToReport,crime$Precinct,summary)
# several boxplots
library(ggpubr)
base7=ggplot(data=crime[crime$DaysToReport>=7,],
aes(x=Precinct,y=DaysToReport))
box7=base7 + geom_boxplot() + labs(title = "week and above")
base30=ggplot(data=crime[crime$DaysToReport>=30,],
aes(x=Precinct,y=DaysToReport))
box30=base30 + geom_boxplot() + labs(title = "month and above")
base180=ggplot(data=crime[crime$DaysToReport>=180,],
aes(x=Precinct,y=DaysToReport))
box180=base180 + geom_boxplot() + labs(title = "half year and above")
base365=ggplot(data=crime[crime$DaysToReport>=360,],
aes(x=Precinct,y=DaysToReport))
box365=base365 + geom_boxplot() + labs(title = "year and above")
#all in one:
ggarrange(box7,box30,box180,box365)
tapply(crime$DaysToReport,crime$year,length)
crimeY2000=crime[crime$year>=2000 & crime$DaysToReport>=365,]
tapply(crimeY2000$DaysToReport,crimeY2000$Precinct,length)
base=ggplot(data=crimeM2000,
aes(x=Precinct,y=DaysToReport))
base + geom_boxplot()
base=ggplot(data=crimeY2000,
aes(x=Precinct,y=DaysToReport))
base + geom_boxplot()
# var in months
crimeY2000$YearsToReport=crimeY2000$DaysToReport/365
# new plot
base=ggplot(data=crimeY2000,
aes(x=Precinct,y=YearsToReport))
base + geom_boxplot() #+ geom_hline(yintercept = 12)
base=ggplot(data=crimeM2000[crimeM2000$MonthsToReport>=12,],
aes(x=Precinct,y=MonthsToReport))
base + geom_boxplot(na.rm = T)
par(mfrow=c(2,1))
boxplot(YearsToReport~weekday,data=crimeY2000,
main="One year or more BY WEEKDAY (since 2000)",las=2)
boxplot(YearsToReport~Occurred.DayTime,data=crimeY2000,
main="One year or more BY TIME CRIME OCCURRED (since 2000)",las=2)
par(mfrow=c(2,1))
boxplot(YearsToReport~year,data=crimeY2000,
main="One year or more (from 2000)",las=2)
boxplot(YearsToReport~crimecat,data=crimeY2000,
main="One year or more (from 2000)",las=2)
base=ggplot(data = crimeY2000,aes(x=year,x=YearsToReport))
base=ggplot(data = crimeY2000,aes(x=year,y=YearsToReport))
base + geom_boxplot()
base=ggplot(data = crimeY2000,aes(x=as.factor(year),y=YearsToReport))
base + geom_boxplot()
base=ggplot(data = crimeY2000,aes(x=crimecat,y=YearsToReport))
base + geom_boxplot()
base=ggplot(data = crimeY2000,aes(x=reorder(crimecat,YearsToReport),y=YearsToReport))
base + geom_boxplot()
base=ggplot(data = crimeY2000,aes(x=reorder(-crimecat,YearsToReport),y=YearsToReport))
base + geom_boxplot()
base=ggplot(data = crimeY2000,aes(x=reorder(crimecat,-YearsToReport),y=YearsToReport))
base + geom_boxplot()
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot()
ggarrange(boxY,boxC)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot()
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45))
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1,size = 3))
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1,size = 6))
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1,size = 5))
ggarrange(boxY,boxC,ncol = 1)
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1,size = 5))
ggarrange(boxY,boxC,ncol = 1)
# collecting the data
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
# variables in the data:
names(crime)
# some stats:
summary(crime)
# stats of days to report
# notice the spread of values.
summary(crime$DaysToReport)
# 'order' decreasing
library(magrittr) # for %>%
crime[order(-crime$DaysToReport),c('year','DaysToReport')]%>%head(20)
# non missing 'precint'
crime=crime[complete.cases(crime$Precinct),]
# summary by groups
aggregate(data=crime, DaysToReport~Precinct,mean)
# boxplot per precint
library(ggplot2)
base=ggplot(data=crime,
aes(x=Precinct,y=DaysToReport))
base + geom_boxplot()
# fast summary by groups with 'tapply'
tapply(crime$DaysToReport,crime$Precinct,summary)
# several boxplots
library(ggpubr)
base7=ggplot(data=crime[crime$DaysToReport>=7,],
aes(x=Precinct,y=DaysToReport))
box7=base7 + geom_boxplot() + labs(title = "week and above")
base30=ggplot(data=crime[crime$DaysToReport>=30,],
aes(x=Precinct,y=DaysToReport))
box30=base30 + geom_boxplot() + labs(title = "month and above")
base180=ggplot(data=crime[crime$DaysToReport>=180,],
aes(x=Precinct,y=DaysToReport))
box180=base180 + geom_boxplot() + labs(title = "half year and above")
base365=ggplot(data=crime[crime$DaysToReport>=360,],
aes(x=Precinct,y=DaysToReport))
box365=base365 + geom_boxplot() + labs(title = "year and above")
#all in one:
ggarrange(box7,box30,box180,box365)
tapply(crime$DaysToReport,crime$year,length)
crimeY2000=crime[crime$year>=2000 & crime$DaysToReport>=365,]
tapply(crimeY2000$DaysToReport,crimeY2000$Precinct,length)
base=ggplot(data=crimeY2000,
aes(x=Precinct,y=DaysToReport))
base + geom_boxplot()
# var in months
crimeY2000$YearsToReport=crimeY2000$DaysToReport/365
# new plot
base=ggplot(data=crimeY2000,
aes(x=Precinct,y=YearsToReport))
base + geom_boxplot()
par(mfrow=c(2,1))
base=ggplot(data = crimeY2000,
aes(x=as.factor(year),
y=YearsToReport))
boxY=base + geom_boxplot()
base=ggplot(data =crimeY2000,
aes(x=reorder(crimecat,YearsToReport),
y=YearsToReport))
boxC=base + geom_boxplot() + theme(axis.text.x = element_text(angle = 45,hjust = 1,size = 5))
ggarrange(boxY,boxC,ncol = 1)
summary(crimeY2000$YearsToReport)
# no missing:
base = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
box  = base + geom_boxplot()
box
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="point",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",type='dashed',
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
minsMaxsMd
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
linetype='dashed',
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
linetype='dashed',
size=2,
aes(group=1,col='Median'))
minsMaxsMd
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all1
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Stats",
values=c("blue", "black","red")
)
all1
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
linetype='dashed',
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed'
size=1,show.legend = F,
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
size=2,
aes(group=1,col='Median'))
minsMaxsMd
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
linetype='dotted',
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
size=2,
aes(group=1,col='Median'))
minsMaxsMd
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Stats",
values=c("blue", "black","red")
)
all1
base  = ggplot(crimeY2000,aes(x=factor(year), y=YearsToReport))
mins = base + stat_summary(fun.y=min, # function for 'y' is min()
geom="line",
linetype='dashed',
show.legend = T,size=1,
aes(group=1,col='Min'))
mins # just the min values
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",
linetype='dashed',
size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxs
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",
size=2,
aes(group=1,col='Median'))
minsMaxsMd
# Change color of lines:
all1=minsMaxsMd + scale_colour_manual(name="Stats",
values=c("blue", "black","red")
)
all1
# data preparation:
crimeLessYear2000=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeLessYear2000$WeeksToReport=crimeWeek$DaysToReport/7
# data preparation:
crimeLessYear2000=crime[(crime$DaysToReport<365) & (crime$year>=2000),]
crimeLessYear2000$WeeksToReport=crimeLessYear2000$DaysToReport/7
#plotting it:
base = ggplot(crimeLessYear2000,aes(x=factor(year), y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,
geom="line",size=2,
aes(group=1,col='Median'))
all2=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red")
)
all2
base= ggplot(crimeY2000,
aes(x = reorder(crimecat, MonthsToReport, FUN = max), # reorder!
y=MonthsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
base= ggplot(crimeY2000,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=MonthsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
base= ggplot(crimeY2000,
aes(x = reorder(crimecat, YearsToReport, FUN = max), # reorder!
y=YearsToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median, size=2,
geom="line",
aes(group=1,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3 + coord_flip()
base = ggplot(crimeLessYear2000,
aes(x = reorder(crimecat, WeeksToReport, FUN = max),
y=WeeksToReport))
mins = base + stat_summary(fun.y=min,size=1,
geom="line", linetype='dashed',show.legend = T,
aes(group=1,col='Min'))
minsMaxs= mins + stat_summary(fun.y=max,
geom="line",size=1,show.legend = F,
aes(group=1,col='Max'))
minsMaxsMd= minsMaxs + stat_summary(fun.y=median,size=2,
geom="line",
aes(group=2,col='Median'))
all3=minsMaxsMd + scale_colour_manual(name="Trends",
values=c("blue", "black","red"))
all3+coord_flip()
#checking the mean per factor value:
tapply(crimeY2000$YearsToReport, crimeY2000$Precinct, mean,na.rm=T)
#checking the mean per factor value:
tapply(crimeY2000$YearsToReport, crimeY2000$Precinct, mean,na.rm=T)
library(Rmisc)
group.CI(YearsToReport ~ Precinct,
data=crimeY2000,
ci = 0.95)
# introducing ggpubr
library(ggpubr)
ggline(data=crimeY2000,x = "Precinct", y = "YearsToReport",
add = 'mean_ci',
error.plot = "pointrange") #+ scale_y_continuous(breaks=seq(7,10,0.5))
# introducing ggpubr
library(ggpubr)
ggline(data=crimeY2000,x = "Precinct", y = "YearsToReport",
add = 'mean_ci',
error.plot = "pointrange") + scale_y_continuous(breaks=seq(7,10,0.5))
# introducing ggpubr
library(ggpubr)
ggline(data=crimeY2000,x = "Precinct", y = "YearsToReport",
add = 'mean_ci',
error.plot = "pointrange")
# Compute the analysis of variance
res.aov <- aov(YearsToReport ~ Precinct, data = crimeY2000)
# Summary of the analysis
summary(res.aov)[[1]]$Pr[1]
# non parametric
kruskal.test(YearsToReport ~ Precinct, data = crimeY2000)
# Compute the analysis of variance
res.aov <- aov(YearsToReport ~ Precinct, data = crimeY2000)
# Summary of the analysis
summary(res.aov)#[[1]]$Pr[1]
#checking the mean per factor value:
tapply(crimeY2000$YearsToReport, crimeY2000$Precinct, mean,na.rm=T)
## ----collect
# collecting the data
link="https://github.com/EvansDataScience/data/raw/master/crime.RData"
load(file = url(link))
## ----names--
# seeing the variable names
names(crime)
## ----head---
# checking first rows
head(crime)
## ----str----
# checking data types
str(crime)#,width = 70,strict.width='cut')
## ----
# checking statistics
summary(crime)
## ----
# contingency table of counts
(PrecintDaytime=table(crime$Precinct,crime$Occurred.DayTime))
## ----
# computing marginal percent (per column) from contigency table
(PrecDayti_mgCol=prop.table(PrecintDaytime,
margin = 2))
PrecDaytiDF=as.data.frame(PrecintDaytime)
names(PrecDaytiDF)=c("precint","daytime","counts")
#adding marginal percents:
PrecDaytiDF$pctCol=as.data.frame(PrecDayti_mgCol)[,3]
## ----
# head of data frame representing contingency table and marginals
head(PrecDaytiDF)
library(ggplot2)
base1=ggplot(data=PrecDaytiDF,
aes(x=precint,y=counts,fill=daytime)) # VARS NEEDED
barDodge= base1 +  geom_bar(stat="identity",
position="dodge") # NOT a default
barDodge= barDodge + geom_text(position = position_dodge(width = 0.9),
angle=90,
hjust=1,
aes(label=counts)) # its own AES!
barDodge
