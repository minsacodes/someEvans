library(rio)
ide=import(link,skip=3)
View(ide)
View(ide)
ide[,3]=gsub(",",".",ide[,3])
ide[,4]=gsub(",",".",ide[,4])
ide[,5]=gsub(",",".",ide[,5])
ide[,6]=gsub(",",".",ide[,6])
ide[,7]=gsub(",",".",ide[,7])
ide[,c(3:7)]=lapply(ide[,c(3:7)],as.numeric)
str(ide)
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
names(ide)
View(ide)
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
hipo=formula(escol~iden+agua+elec)
summary(lm(hipo,data=ide))
link="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/DATA/ide.xlsx"
library(rio)
ide=import(link,skip=3)
ide[,3]=gsub(",",".",ide[,3])
ide[,4]=gsub(",",".",ide[,4])
ide[,5]=gsub(",",".",ide[,5])
ide[,6]=gsub(",",".",ide[,6])
ide[,7]=gsub(",",".",ide[,7])
ide[,c(3:7)]=lapply(ide[,c(3:7)],as.numeric)
names(ide)
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
hipo=formula(escol~iden+agua+elec)
summary(lm(hipo,data=ide))
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
hipo=formula(escol~iden+agua+elec)
r1=lm(hipo,data=ide)
summary(r1)
hipo2=formula(escol~iden+agua+elec+meds)
r2=lm(hipo2,data=ide)
aov(r1,r2)
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
hipo=formula(escol~iden+agua+elec)
hipo2=formula(escol~iden+agua+elec+meds)
r1=lm(hipo,data=ide)
r2=lm(hipo2,data=ide)
aov(r1,r2)
names(ide)=c("prov","ide","iden","meds","escol","agua","elec")
hipo=formula(escol~iden+agua+elec)
hipo2=formula(escol~iden+agua+elec+meds)
r1=lm(hipo,data=ide)
r2=lm(hipo2,data=ide)
anova(r1,r2)
summary(r1)
summary(r2)
??dbscan
library(htmltab)
happyL="https://en.wikipedia.org/wiki/World_Happiness_Report"
happyPath='//*[@id="mw-content-text"]/div/table/tbody'
happy = htmltab(doc = happyL,which  = happyPath,encoding = "UTF-8")
happy[,-2]=lapply(happy[,-2], as.numeric)
View(happy)
set.seed(1111)
library(cluster)
inputData=happy[,-c(1:3)]
g.dist = daisy(inputData, metric="gower",stand = T)
set.seed(1111)
library(factoextra)
library(cluster)
fviz_nbclust(inputData, pam,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
fviz_nbclust(inputData, hcut,diss=g.dist,method = "gap_stat",k.max = 10,verbose = F)
lk="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
hdi=rio::import(lk,skip=4)
hdi=hdi[,-c(1,4,6,8,10,12,13,14,15)]
names(hdi)[1]=c("country")
hdi=hdi[1:202,]
#elimine los que no sean paises, de ahi
#formatee, y ya luego quedese con paises con data completa
hdi[,-1]=lapply(hdi[,-1],as.numeric)
hdi=hdi[complete.cases(hdi),]
View(hdi)
names(hdi)
names(hdi)=c("c","hdi","life","years", 'mean','gni')
hipo1=formula(gni~life + mean)
hipo2=formula(gni~life + mean + years)
reg1=lm(hipo1,data=hdi)
reg2=lm(hipo2,data=hdi)
summary(reg1)
summary(reg2)
anova(reg1,reg2)
anova(reg1,reg2)
lk="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
hdi=rio::import(lk,skip=4)
hdi=hdi[,-c(1,4,6,8,10,12,13,14,15)]
names(hdi)[1]=c("country")
hdi=hdi[1:202,]
#elimine los que no sean paises, de ahi
#formatee, y ya luego quedese con paises con data completa
hdi[,-1]=lapply(hdi[,-1],as.numeric)
hdi=hdi[complete.cases(hdi),]
names(hdi)
library(htmltab)
link="https://en.wikipedia.org/wiki/World_Happiness_Report#2019_report"
path='//*[@id="mw-content-text"]/div[1]/table'
happy=htmltab(doc = link,
which = path,
encoding = "UTF-8")
library(htmltab)
link="https://en.wikipedia.org/wiki/World_Happiness_Report#2019_report"
path='//*[@id="mw-content-text"]/div[1]/table'
happy=htmltab(doc = link,
which = path,
encoding = "UTF-8")
library(htmltab)
link="https://en.wikipedia.org/wiki/World_Happiness_Report"
path='//*[@id="mw-content-text"]/div[1]/table'
happy=htmltab(doc = link,
which = path,
encoding = "UTF-8")
names(happy)
names(happy)
View(happy)
View(happy)
#World Happiness Report
library(htmltab)
LinkPage= "https://en.wikipedia.org/wiki/World_Happiness_Report"
LinkPath='//*[@id="mw-content-text"]/div[1]/table'
data = htmltab(doc = LinkPage, which =LinkPath)
data$`Country or region`=gsub(pattern = "Â",replacement = "", data$`Country or region`)
data[,1:2]=lapply(data[,1:2], trimws,whitespace = "[\\h\\v]")
data[,3:9]=lapply(data[,3:9], as.numeric)
row.names(data)=data$`Country or region`
data$`Overall rank`=NULL
set.seed(1111)
View(data)
dist = daisy(data[,2:8], metric="gower", stand = T)
fviz_nbclust(data[,2:8], pam,diss=dist,method = "gap_stat",k.max = 10,verbose = F) #PAM
fviz_nbclust(data[,2:8], hcut,diss=dist,method = "gap_stat",k.max = 10,verbose = F) #AGNES, DIANA
dist = daisy(data[,3:9], metric="gower", stand = T)
data[,2:8]
dist = daisy(data[,3:8], metric="gower", stand = T)
fviz_nbclust(data[,3:8], pam,diss=dist,method = "gap_stat",k.max = 10,verbose = F) #PAM
fviz_nbclust(data[,3:8], hcut,diss=dist,method = "gap_stat",k.max = 10,verbose = F) #AGNES, DIANA
library(htmltab)
linkwiki_Happy="https://en.wikipedia.org/wiki/World_Happiness_Report"
linkpath_wiki='//*[@id="mw-content-text"]/div[1]/table'
Happy=htmltab(doc = linkwiki_Happy, which = linkpath_wiki)
View(Happy)
#quitamos símbolos raros:
Happy$`Country or region`=gsub("Â","",Happy$`Country or region`)
#quitamos espacios en blanco al inicio
Happy$`Country or region`=trimws(Happy$`Country or region`,whitespace = "[\\h\\v]")
#volvemos numérica:
Happy[,c(3:9)]=lapply(Happy[,c(3:9)],as.numeric)
#quitamos el rank
Happy$`Overall rank`=NULL
happyfinal=Happy[,c(2:8)]
g.dist = daisy(happyfinal, metric="gower",stand = T)
fviz_nbclust(happyfinal, pam,diss=dist,method = "gap_stat",k.max = 10,verbose = F)
fviz_nbclust(happyfinal, hcut,diss=dist,method = "gap_stat",k.max = 10,verbose = F)
View(happyfinal)
link="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
IDH=import(link)
link="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
IDH=import(link)
lk="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
hdi=rio::import(lk,skip=4)
hdi=hdi[,-c(1,4,6,8,10,12,13,14,15)]
names(hdi)[1]=c("country")
hdi=hdi[1:202,]
#elimine los que no sean paises, de ahi
#formatee, y ya luego quedese con paises con data completa
hdi[,-1]=lapply(hdi[,-1],as.numeric)
hdi=hdi[complete.cases(hdi),]
#Filas:
IDH=IDH[-c(1:7),]
#Creamos nueva columna
IDH$num=c(1:262)
IDH$num=as.numeric(IDH$num)
row.names(IDH)=IDH$num
IDH$num=NULL
#Columnas
IDH[,c(3:4)]=NULL
IDH[,c(10:13)]=NULL
IDH[,c(4,6,8)]=NULL
IDH$...1=NULL
#Cambiemos el nombre
names(IDH)=c("Pais","EspVida","AñosEscuela","MediaEscuela","GNI")
IDH[,c(2:5)]=lapply(IDH[,c(2:5)],as.numeric)
View(IDH)
modelo1=formula(GNI ~ EspVida + IDH$MediaEscuela)
modelo2=formula(GNI ~ EspVida + IDH$AñosEscuela + IDH$AñosEscuela)
lm(modelo1,data=IDH)
library(rio)
link="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
HDI=import(link)
library(rio)
link="https://github.com/PoliticayGobiernoPUCP/estadistica_anapol2/raw/master/HDI_2018.xlsx"
HDI=import(link)
#removemos columnas vacías
HDI[,c(1,4,6,8,10,12,13,14,15)]=NULL
names(HDI)=c("Country", "HDI", "Life", "Expected", "Mean", "GNI")
#borramos la fila 1-7
HDI=HDI[-c(1:7),]
str(HDI)
#borramos na
HDI=na.omit(HDI)
View(HDI)
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
inventedDF <- data.frame(schoolType=c("Public", "Private", "Other"),
Count=c(200, 20, 80))
library(ggplot2)
base=ggplot(data=inventedDF, # name of data frame
aes(x=schoolType,# variables to use in each object
y=Count))
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
inventedDF <- data.frame(schoolType=c("Public", "Private", "Other"),
Count=c(200, 20, 80))
library(ggplot2)
base=ggplot(data=inventedDF, # name of data frame
aes(x=schoolType,# variables to use in each object
y=Count))
inventedDF <- data.frame(schoolType=c("Public", "Private", "Other"),
Count=c(200, 20, 80))
library(ggplot2)
base=ggplot(data=inventedDF,aes(x=schoolType,y=Count))
base + geom_bar(stat = 'identity') # object BAR plots "y", as is.
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
location="https://github.com/EvansDataScience/data/raw/master/"
file="hsb_ok.xlsx"
linkToFile=paste0(location,file)
library(rio)
hsb=import(linkToFile)
View(hsb)
location="https://github.com/EvansDataScience/data/raw/master/"
file="hsb_ok.sav"
linkToFile=paste0(location,file)
library(rio)
hsb=import(linkToFile)
View(hsb)
library(rio)
hsb=foreign::read.spss(linkToFile)
View(hsb)
library(rio)
hsb=foreign::read.spss(linkToFile,to.data.frame = T)
View(hsb)
library(foreign)
hsb=read.spss(linkToFile,to.data.frame = T)
hsb
str(hsb)
as.ordered(hsb$SES)
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=sex)) # what to plot
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=sex)) # what to plot
base + geom_bar()
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=sex)) # what to plot
base + geom_bar()
base + geom_bar(aes(sex))
base=ggplot(data=hsb)
base + geom_bar(aes(sex))
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=LOCUS)) # what to plot
base + geom_histogram()
base + geom_boxplot()
base + geom_histogram()
# all text for titles
Titles=list(Title="Nice title",
SubTi="sub is here",
XTi="Type of school",
YTi="Amount of schools",
Sou="Source: imaginary")
#
plot1= base + geom_histogram()
#
# using texts
plot1 + labs(title = Titles$Ti,
subtitle = Titles$STi,
xlab=Titles$XTi,
ylab=Titles$YTi,
caption = Titles$Sou)
# all text for titles
Titles=list(Title="Nice title",
SubTi="sub is here",
XTi="Type of school",
YTi="Amount of schools",
Sou="Source: imaginary")
#
plot1= base + geom_histogram()
#
# using texts
plot1 + labs(title = Titles$Title,
subtitle = Titles$SubTi,
xlab=Titles$XTi,
ylab=Titles$YTi,
caption = Titles$Sou)
# all text for titles
Titles=list(Title="Nice title",
SubTi="sub is here",
XTi="Type of school",
YTi="Amount of schools",
Sou="Source: imaginary")
#
plot1= base + geom_histogram()
#
# using texts
plot1 + labs(title = Titles$Title,
subtitle = Titles$SubTi,
x=Titles$XTi,
y=Titles$YTi,
caption = Titles$Sou)
# all text for titles
Titles=list(Title="Nice title",
SubTi="sub is here",
XTi="Level of MATH",
YTi="Amount of students",
Sou="Source: imaginary")
#
plot1= base + geom_histogram()
#
# using texts
plot1= plot1 + labs(title = Titles$Title,
subtitle = Titles$SubTi,
x=Titles$XTi,
y=Titles$YTi,
caption = Titles$Sou)
plot1
unlink('Documents/Evans/2021/VisualAnalytics/session1/session1_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Documents/Evans/2021/VisualAnalytics/session1/session1.Rmd')
rmarkdown::shiny_prerendered_clean('Documents/Evans/2021/VisualAnalytics/session1/session1.Rmd')
unlink('Documents/Evans/2021/VisualAnalytics/session1/session1_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Documents/Evans/2021/VisualAnalytics/session1/session1.Rmd')
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=MATH)) # what to plot
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
location="https://github.com/EvansDataScience/data/raw/master/"
file="hsb_ok.sav"
linkToFile=paste0(location,file)
library(foreign)
hsb=read.spss(linkToFile,to.data.frame = T)
str(hsb)
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=MATH)) # what to plot
unlink('Documents/Evans/2021/VisualAnalytics/session1/session1_cache', recursive = TRUE)
rmarkdown::shiny_prerendered_clean('Documents/Evans/2021/VisualAnalytics/session1/session1.Rmd')
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =2,y=30, #position
label=message)
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
location="https://github.com/EvansDataScience/data/raw/master/"
file="hsb_ok.sav"
linkToFile=paste0(location,file)
library(foreign)
hsb=read.spss(linkToFile,to.data.frame = T)
str(hsb)
library(ggplot2)
base=ggplot(data=hsb, # data frame
aes(x=MATH)) # what to plot
#
plot1= base + geom_histogram()
# I need this to see the result:
plot1
# all text for titles
Titles=list(Title="Nice title",
SubTi="sub is here",
XTi="Level of MATH",
YTi="Amount of students",
Sou="Source: imaginary")
#
# using the previous texts
plot2= plot1 + labs(title = Titles$Title,
subtitle = Titles$SubTi,
x=Titles$XTi,
y=Titles$YTi,
caption = Titles$Sou)
plot2
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =2,y=30, #position
label=message)
plot3
plot4=plot3+ theme_classic()
plot4
plot4=plot3+ theme_classic()
plot4
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =2,y=30, #position
label=message)
plot3
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =50,y=30, #position
label=message)
plot3
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =50,y=20, #position
label=message)
plot3
#texts for annotation
message="HELLO"
#
#annotating
plot3=plot2 + annotate(geom = 'text',
x =50,y=20, #position
label=message,
color='white')
plot3
plot4=plot3+ theme_classic()
plot4
plot1
base + geom_histogram(aes(color=SEX))
plot1legend=base + geom_histogram(aes(color=SEX))
plot1legend
plot1 + facet_grid(~SEX)
plot1legend + facet_grid(~SEX)
plot1legend + base + geom_histogram()+facet_grid(~SEX)
base + geom_histogram()+facet_grid(~SEX)
plot1legend + facet_grid(~SEX)
plot1legend=base + geom_histogram()
plot1legend
plot1legend + facet_grid(~SEX)
plot1legend=base + geom_histogram(aes(color=SEX))
plot1legend
plot1legend + facet_grid(~SEX)
plot1legFacet=plot1legend + facet_grid(~SEX)
plot1legFacet
plot1legend=base + geom_histogram(aes(fill=SEX))
plot1legend
plot1legFacet=plot1legend + facet_grid(~SEX)
plot1legFacet
View(hsb)
base=ggplot(data= hsb,
aes(x=MATH,y=WRTG)) + theme_light()
plotDots=base + geom_point()
plotDots
base=ggplot(data= hsb,
aes(x=MATH,y=WRTG)) + theme_light()
plotDots=base + geom_point(shape=3)
plotDots
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" black ")
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" black ",
lty=3)
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" red ",
lty=3)
base=ggplot(data= hsb,
aes(x=MATH,y=WRTG)) + theme_light()
plotDots=base + geom_point(shape=3, color='grey')
plotDots
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" red ",
lty=3)
base=ggplot(data= hsb,
aes(x=MATH,y=WRTG)) + theme_light()
plotDots=base + geom_point(shape=16)
plotDots
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" red ",
lty=3)
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" red ",
lty=1)
plotDots + geom_smooth (method = lm ,
se=FALSE,
colour =" red ",
lty=5)
View(hsb)
plot1legFacet2=plot1legend + facet_grid(SES~SEX)
plot1legFacet2
setwd("~/Documents/Evans/2021/ComputationalThinking/Part1_PythonForPreProcessing")
fromPy = readRDS("cleanIndex.RDS.RDS")
fromPy = readRDS("cleanIndex.RDS")
View(fromPy)
str(fromPy)
fromPy = readRDS("test.Rds")
str(fromPy)
